datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model user_login_info {
  username      String @unique
  hash_password String
  user_role     String
}

model doctor_info {
  username       String @unique
  name           String
  specialization String
  degree         String
  phone          String
  email          String
}

model receptionist_info {
  username String @unique
  name     String
  phone    String
}

model intern_info {
  username String @unique
  name     String
  phone    String
}

model patient_basic_info {
  id              Int                       @id @default(autoincrement())
  name            String
  phone           String                    @unique
  nid             String                    @unique
  dob             DateTime
  gender          String
  hometown        String
  addresses       String[]
  address_from    DateTime[]
  address_to      DateTime[]
  occupations     String[]
  occupation_from DateTime[]
  occupation_to   DateTime[]
  travel_history  String[]
  travel_from     DateTime[]
  travel_to       DateTime[]
  height          Float?
  weight          Float?
  bloodPressures  patient_blood_pressures[]
  heartRates      patient_heart_rates[]
  //   medicalHistory 	medical_history[]
  prescription    prescription[]
}

model patient_blood_pressures {
  id         Int                @id @default(autoincrement())
  patient    patient_basic_info @relation(fields: [patient_id], references: [id])
  patient_id Int
  taken_at   DateTime
  value_low  Int
  value_high Int
}

model patient_heart_rates {
  id         Int                @id @default(autoincrement())
  patient    patient_basic_info @relation(fields: [patient_id], references: [id])
  patient_id Int
  taken_at   DateTime
  value      Int
}

// model medical_history {
//   disease_id Int
//   date       DateTime
//   patient_id Int

//   diseases   diseases 			@relation(fields: [disease_id], references: [id])
//   patient    patient_basic_info @relation(fields: [patient_id], references: [id])

//   @@id([disease_id, date, patient_id])
//   @@index([disease_id], name: "disease_id")
//   @@index([patient_id], name: "patient_id")
// }

// model diseases {
//   id         			Int       @id @default(autoincrement())
//   disease_name       	String
//   symptoms   			String[]
//   is_chronic			String?   @map("is_chronic")
//   medical_history 		medical_history[]

//   @@index([disease_name], name: "disease_name")
// }

model medical_history {
  disease_id Int
  date       DateTime
  patient_id Int
  diseases   diseases @relation(fields: [disease_id], references: [id])

  @@id([disease_id, date, patient_id])
}

model diseases {
  id              Int               @id @default(autoincrement())
  disease_name    String
  is_chronic      String?
  medical_history medical_history[]

  @@index([disease_name], name: "disease_name")
}

model prescription {
  id         Int                @id @default(autoincrement())
  patient_id Int
  date       DateTime?
  patient    patient_basic_info @relation(fields: [patient_id], references: [id])

  prescribed_tests prescribed_tests[]
  queued_tests     queued_tests[]

  @@index([patient_id], name: "patient_id")
}

model test_metadata {
  id          Int      @id @default(autoincrement())
  test_name   String
  row_name    String[]
  column_name String[]

  prescribed_tests prescribed_tests[]
  queued_tests     queued_tests[]

  @@index([test_name], name: "test_name")
}

model prescribed_tests {
  prescription_id Int
  test_id         Int
  test_values     String[]
  attachments     String?
  date            DateTime?

  prescription prescription  @relation(fields: [prescription_id], references: [id])
  test         test_metadata @relation(fields: [test_id], references: [id])

  @@id([prescription_id, test_id])
}

model queued_tests {
  prescription_id Int
  test_id         Int

  prescription prescription  @relation(fields: [prescription_id], references: [id])
  test         test_metadata @relation(fields: [test_id], references: [id])

  @@id([prescription_id, test_id])
}
